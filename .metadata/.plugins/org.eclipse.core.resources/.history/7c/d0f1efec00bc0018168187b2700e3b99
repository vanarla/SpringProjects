package com.capgemini.bankapp.service.impl;

import com.capgemini.bankapp.repository.BankAccountRepository;
import com.capgemini.bankapp.service.BankAccountService;

public class BankAccountServiceImpl implements BankAccountService {
	private BankAccountRepository bankAccountRepository;

	@Override
	public double getBalance(long accountId) {
		return bankAccountRepository.getBalance(accountId);
	}

	@Override
	public double withdraw(long accountId, double amount) {
		double balance=bankAccountRepository.getBalance(accountId);
		if(balance!=-1)
		{
			if(balance-amount>=0)
			{
				bankAccountRepository.updateBalance(accountId, balance-amount);
				return bankAccountRepository.getBalance(accountId);
			}
		}
		return balance;
	}

	@Override
	public double deposit(long accountId, double amount) {
		double balance=bankAccountRepository.getBalance(accountId);
		if(balance!=-1)
		{
			bankAccountRepository.updateBalance(accountId, balance+amount);
			return bankAccountRepository.getBalance(accountId);
		}
		return balance;
	}

	@Override
	public double fundTransfer(long fromAcc, long toAcc, double amount) {
		double balance=withdraw(fromAcc,toAcc);
		if(balance!=-1)
		deposit(toAcc,amount);
		return balance;
	}

}
